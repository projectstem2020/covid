inputfile = orig
128 x 29906 - 29635 d
nthread = 2
nadd = 0
inputfile = infile
thresholdtorev = 0.000000
reflim = 5000
mode = a
generating a scoring matrix for nucleotide (dist=200) ... done

Step 1/2
1   101   

Step 2/2
 1 / 128 (2 threads)    101 / 128 (2 threads)   
makedirectionlist (nuc) Version 7.453
alg=m, model=DNA200 (2), 1.53 (4.59), 0.37 (1.11), noshift, amax=0.0
2 thread(s)

directionfile = _direction
inputfile = infile
subalignment = 0
subalignmentoffset = 0
128 x 29906 - 29635 d
directionfile = _direction
inputfile = orig
subalignment = 0
subalignmentoffset = 0
128 x 29906 - 29635 d
nthread = 2
nthreadpair = 2
nthreadtb = 2
ppenalty_ex = 0
stacksize: 8192 kb
generating a scoring matrix for nucleotide (dist=200) ... done
Gap Penalty = -1.53, +0.00, +0.00



Making a distance matrix ..

There are 27897 ambiguous characters.
    1 / 128 (thread    1)  101 / 128 (thread    0)
done.

Constructing a UPGMA tree (efffree=0) ... 
    0 / 128   10 / 128   20 / 128   30 / 128   40 / 128   50 / 128   60 / 128   70 / 128   80 / 128   90 / 128  100 / 128  110 / 128  120 / 128
done.

Progressive alignment 1/2... 
STEP     1 / 127 (thread    1) fSTEP     2 / 127 (thread    0) fSTEP     3 / 127 (thread    0) fSTEP     4 / 127 (thread    1) fSTEP     5 / 127 (thread    0) fSTEP     6 / 127 (thread    1) fSTEP     7 / 127 (thread    0) fSTEP     8 / 127 (thread    0) fSTEP     9 / 127 (thread    1) fSTEP    10 / 127 (thread    0) fSTEP    11 / 127 (thread    1) fSTEP    12 / 127 (thread    0) fSTEP    13 / 127 (thread    1) fSTEP    14 / 127 (thread    0) fSTEP    15 / 127 (thread    1) fSTEP    16 / 127 (thread    0) fSTEP    17 / 127 (thread    1) fSTEP    18 / 127 (thread    0) fSTEP    19 / 127 (thread    1) fSTEP    20 / 127 (thread    1) fSTEP    21 / 127 (thread    0) fSTEP    22 / 127 (thread    1) fSTEP    23 / 127 (thread    0) fSTEP    24 / 127 (thread    1) fSTEP    25 / 127 (thread    0) fSTEP    26 / 127 (thread    1) fSTEP    27 / 127 (thread    1) fSTEP    28 / 127 (thread    0) fSTEP    29 / 127 (thread    1) fSTEP    30 / 127 (thread    0) fSTEP    31 / 127 (thread    1) fSTEP    32 / 127 (thread    0) fSTEP    33 / 127 (thread    1) fSTEP    34 / 127 (thread    0) fSTEP    35 / 127 (thread    0) fSTEP    36 / 127 (thread    1) fSTEP    37 / 127 (thread    0) fSTEP    38 / 127 (thread    1) fSTEP    39 / 127 (thread    0) fSTEP    40 / 127 (thread    1) fSTEP    41 / 127 (thread    0) fSTEP    42 / 127 (thread    1) fSTEP    43 / 127 (thread    0) fSTEP    44 / 127 (thread    1) fSTEP    45 / 127 (thread    0) fSTEP    46 / 127 (thread    1) fSTEP    47 / 127 (thread    1) fSTEP    48 / 127 (thread    0) fSTEP    49 / 127 (thread    0) fSTEP    50 / 127 (thread    1) fSTEP    51 / 127 (thread    0) fSTEP    52 / 127 (thread    1) fSTEP    53 / 127 (thread    0) fSTEP    54 / 127 (thread    1) fSTEP    55 / 127 (thread    1) fSTEP    56 / 127 (thread    0) fSTEP    57 / 127 (thread    0) fSTEP    58 / 127 (thread    1) fSTEP    59 / 127 (thread    0) fSTEP    60 / 127 (thread    1) fSTEP    61 / 127 (thread    0) fSTEP    62 / 127 (thread    1) fSTEP    63 / 127 (thread    0) fSTEP    64 / 127 (thread    0) fSTEP    65 / 127 (thread    1) fSTEP    66 / 127 (thread    1) fSTEP    67 / 127 (thread    0) fSTEP    68 / 127 (thread    1) fSTEP    69 / 127 (thread    0) fSTEP    70 / 127 (thread    0) fSTEP    71 / 127 (thread    1) fSTEP    72 / 127 (thread    0) fSTEP    73 / 127 (thread    0) fSTEP    74 / 127 (thread    1) fSTEP    75 / 127 (thread    0) fSTEP    76 / 127 (thread    1) fSTEP    77 / 127 (thread    0) fSTEP    78 / 127 (thread    1) fSTEP    79 / 127 (thread    0) fSTEP    80 / 127 (thread    0) fSTEP    81 / 127 (thread    1) fSTEP    82 / 127 (thread    0) fSTEP    83 / 127 (thread    0) fSTEP    84 / 127 (thread    1) fSTEP    85 / 127 (thread    0) fSTEP    86 / 127 (thread    1) fSTEP    87 / 127 (thread    0) fSTEP    88 / 127 (thread    1) fSTEP    89 / 127 (thread    0) fSTEP    90 / 127 (thread    1) fSTEP    91 / 127 (thread    0) fSTEP    92 / 127 (thread    0) fSTEP    93 / 127 (thread    1) fSTEP    94 / 127 (thread    1) fSTEP    95 / 127 (thread    0) fSTEP    96 / 127 (thread    1) fSTEP    97 / 127 (thread    0) fSTEP    98 / 127 (thread    1) fSTEP    99 / 127 (thread    1) fSTEP   100 / 127 (thread    0) fSTEP   101 / 127 (thread    1) fSTEP   102 / 127 (thread    0) fSTEP   103 / 127 (thread    1) fSTEP   104 / 127 (thread    0) fSTEP   105 / 127 (thread    1) f
Reallocating..done. *alloclen = 60818
STEP   106 / 127 (thread    1) fSTEP   107 / 127 (thread    0) fSTEP   108 / 127 (thread    0) fSTEP   109 / 127 (thread    1) fSTEP   110 / 127 (thread    0) fSTEP   111 / 127 (thread    1) fSTEP   112 / 127 (thread    1) fSTEP   113 / 127 (thread    0) fSTEP   114 / 127 (thread    1) fSTEP   115 / 127 (thread    0) fSTEP   116 / 127 (thread    1) fSTEP   117 / 127 (thread    0) fSTEP   118 / 127 (thread    1) fSTEP   119 / 127 (thread    0) fSTEP   120 / 127 (thread    1) fSTEP   121 / 127 (thread    0) fSTEP   122 / 127 (thread    1) fSTEP   123 / 127 (thread    0) fSTEP   124 / 127 (thread    1) fSTEP   125 / 127 (thread    0) fSTEP   126 / 127 (thread    1) fSTEP   127 / 127 (thread    0) f
done.

Making a distance matrix from msa.. 
    0 / 128 (thread    0)  100 / 128 (thread    1)
done.

Constructing a UPGMA tree (efffree=1) ... 
    0 / 128   10 / 128   20 / 128   30 / 128   40 / 128   50 / 128   60 / 128   70 / 128   80 / 128   90 / 128  100 / 128  110 / 128  120 / 128
done.

Progressive alignment 2/2... 
STEP     1 / 127 (thread    0) fSTEP     2 / 127 (thread    1) fSTEP     3 / 127 (thread    0) fSTEP     4 / 127 (thread    1) fSTEP     5 / 127 (thread    0) fSTEP     6 / 127 (thread    1) fSTEP     7 / 127 (thread    0) fSTEP     8 / 127 (thread    1) fSTEP     9 / 127 (thread    1) fSTEP    10 / 127 (thread    0) fSTEP    11 / 127 (thread    1) fSTEP    12 / 127 (thread    0) fSTEP    13 / 127 (thread    1) fSTEP    14 / 127 (thread    0) fSTEP    15 / 127 (thread    1) fSTEP    16 / 127 (thread    0) fSTEP    17 / 127 (thread    0) fSTEP    18 / 127 (thread    1) fSTEP    19 / 127 (thread    0) fSTEP    21 / 127 (thread    0) fSTEP    20 / 127 (thread    1) fSTEP    22 / 127 (thread    1) fSTEP    23 / 127 (thread    0) fSTEP    24 / 127 (thread    1) fSTEP    25 / 127 (thread    0) fSTEP    26 / 127 (thread    0) fSTEP    27 / 127 (thread    1) fSTEP    28 / 127 (thread    1) fSTEP    29 / 127 (thread    0) fSTEP    30 / 127 (thread    1) fSTEP    31 / 127 (thread    0) fSTEP    32 / 127 (thread    1) fSTEP    33 / 127 (thread    0) fSTEP    34 / 127 (thread    1) fSTEP    35 / 127 (thread    0) fSTEP    36 / 127 (thread    1) fSTEP    37 / 127 (thread    0) fSTEP    38 / 127 (thread    1) fSTEP    39 / 127 (thread    0) fSTEP    40 / 127 (thread    0) fSTEP    41 / 127 (thread    1) fSTEP    42 / 127 (thread    0) fSTEP    43 / 127 (thread    1) fSTEP    44 / 127 (thread    1) fSTEP    45 / 127 (thread    0) fSTEP    46 / 127 (thread    1) fSTEP    47 / 127 (thread    0) fSTEP    48 / 127 (thread    1) fSTEP    49 / 127 (thread    0) fSTEP    50 / 127 (thread    1) fSTEP    51 / 127 (thread    0) fSTEP    52 / 127 (thread    1) fSTEP    53 / 127 (thread    0) fSTEP    54 / 127 (thread    1) fSTEP    55 / 127 (thread    0) fSTEP    56 / 127 (thread    0) fSTEP    57 / 127 (thread    1) fSTEP    58 / 127 (thread    0) fSTEP    59 / 127 (thread    1) fSTEP    60 / 127 (thread    0) fSTEP    61 / 127 (thread    1) fSTEP    62 / 127 (thread    0) fSTEP    63 / 127 (thread    1) fSTEP    64 / 127 (thread    0) fSTEP    65 / 127 (thread    1) fSTEP    66 / 127 (thread    0) fSTEP    67 / 127 (thread    1) fSTEP    68 / 127 (thread    0) fSTEP    69 / 127 (thread    1) fSTEP    70 / 127 (thread    0) fSTEP    71 / 127 (thread    1) fSTEP    72 / 127 (thread    0) fSTEP    73 / 127 (thread    1) fSTEP    74 / 127 (thread    0) fSTEP    75 / 127 (thread    1) fSTEP    76 / 127 (thread    0) fSTEP    77 / 127 (thread    1) fSTEP    78 / 127 (thread    0) fSTEP    79 / 127 (thread    1) fSTEP    80 / 127 (thread    0) fSTEP    81 / 127 (thread    0) fSTEP    82 / 127 (thread    1) fSTEP    83 / 127 (thread    0) fSTEP    84 / 127 (thread    1) fSTEP    85 / 127 (thread    0) fSTEP    86 / 127 (thread    1) fSTEP    87 / 127 (thread    0) fSTEP    88 / 127 (thread    1) fSTEP    89 / 127 (thread    0) fSTEP    90 / 127 (thread    1) fSTEP    91 / 127 (thread    0) fSTEP    92 / 127 (thread    1) fSTEP    93 / 127 (thread    0) fSTEP    94 / 127 (thread    0) fSTEP    95 / 127 (thread    1) fSTEP    96 / 127 (thread    1) fSTEP    97 / 127 (thread    0) fSTEP    98 / 127 (thread    1) fSTEP    99 / 127 (thread    0) fSTEP   100 / 127 (thread    1) fSTEP   101 / 127 (thread    0) fSTEP   102 / 127 (thread    1) fSTEP   103 / 127 (thread    0) fSTEP   104 / 127 (thread    0) fSTEP   105 / 127 (thread    1) fSTEP   106 / 127 (thread    0) fSTEP   107 / 127 (thread    0) f
Reallocating..done. *alloclen = 60818
STEP   108 / 127 (thread    1) fSTEP   109 / 127 (thread    0) fSTEP   110 / 127 (thread    1) fSTEP   111 / 127 (thread    1) fSTEP   112 / 127 (thread    0) fSTEP   113 / 127 (thread    0) fSTEP   114 / 127 (thread    1) fSTEP   115 / 127 (thread    0) fSTEP   116 / 127 (thread    1) fSTEP   117 / 127 (thread    0) fSTEP   118 / 127 (thread    0) fSTEP   119 / 127 (thread    1) fSTEP   120 / 127 (thread    0) fSTEP   121 / 127 (thread    1) fSTEP   122 / 127 (thread    1) fSTEP   123 / 127 (thread    0) fSTEP   124 / 127 (thread    1) fSTEP   125 / 127 (thread    0) fSTEP   126 / 127 (thread    1) fSTEP   127 / 127 (thread    0) f
done.

disttbfast (nuc) Version 7.453
alg=A, model=DNA200 (2), 1.53 (4.59), -0.00 (-0.00), noshift, amax=0.0
2 thread(s)


Strategy:
 FFT-NS-2 (Fast but rough)
 Progressive method (guide trees were built 2 times.)

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.

